{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let AddeditComponent = class AddeditComponent {\n  constructor(formBuilder, empService, router, route, toastr) {\n    this.formBuilder = formBuilder;\n    this.empService = empService;\n    this.router = router;\n    this.route = route;\n    this.toastr = toastr;\n    this.loading = false;\n    this.submitted = false;\n    this.btnText = \"Save\";\n    this.title = \"New Employee\";\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    if (this.id > 0) {\n      this.loadData();\n      this.btnText = \"Update\";\n      this.title = \"Edit Employee\";\n    }\n    this.formadd = this.formBuilder.group({\n      empId: 0,\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      phoneNumber: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.formadd.controls;\n  }\n  loadData() {\n    this.empService.getById(this.id).subscribe(x => this.formadd.patchValue(x));\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.formadd.invalid) {\n      return;\n    }\n    this.loading = true;\n    if (this.id > 0) {\n      this.empService.update(this.formadd.value).subscribe(data => {\n        this.toastr.success('Successfully Updated');\n        this.btnCancel();\n      });\n    } else {\n      this.empService.create(this.formadd.value).subscribe(data => {\n        this.toastr.success('Successfully Added');\n        this.btnCancel();\n      });\n    }\n  }\n  btnCancel() {\n    this.router.navigate(['/list']);\n  }\n};\nAddeditComponent = __decorate([Component({\n  selector: 'app-addedit',\n  templateUrl: './addedit.component.html',\n  styleUrls: ['./addedit.component.css']\n})], AddeditComponent);","map":{"version":3,"names":["Component","Validators","AddeditComponent","constructor","formBuilder","empService","router","route","toastr","loading","submitted","btnText","title","ngOnInit","id","snapshot","params","loadData","formadd","group","empId","firstName","required","lastName","email","phoneNumber","f","controls","getById","subscribe","x","patchValue","onSubmit","invalid","update","value","data","success","btnCancel","create","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\employee\\addedit.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmpService } from '../_services/emp.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-addedit',\n  templateUrl: './addedit.component.html',\n  styleUrls: ['./addedit.component.css']\n})\nexport class AddeditComponent {\n\n  formadd!: FormGroup;\n  id!: number;\n  loading = false;\n  submitted = false;\n  btnText: string = \"Save\";\n  title: string = \"New Employee\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private empService: EmpService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n\n    if (this.id > 0) {\n      this.loadData();\n      this.btnText = \"Update\";\n      this.title = \"Edit Employee\";\n    }\n\n    this.formadd = this.formBuilder.group({\n      empId: 0,\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      phoneNumber: ['', Validators.required]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.formadd.controls; }\n\n  loadData() {\n    this.empService.getById(this.id).subscribe(x => this.formadd.patchValue(x))\n  }\n\n  onSubmit() {\n\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.formadd.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    if (this.id > 0) {\n      this.empService.update(this.formadd.value)\n        .subscribe(\n          data => {\n            this.toastr.success('Successfully Updated');\n            this.btnCancel();\n          })\n    }\n    else {\n      this.empService.create(this.formadd.value)\n        .subscribe(\n          data => {\n            this.toastr.success('Successfully Added');\n            this.btnCancel();\n          });\n    }\n  }\n\n  btnCancel() {\n    this.router.navigate(['/list'])\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}