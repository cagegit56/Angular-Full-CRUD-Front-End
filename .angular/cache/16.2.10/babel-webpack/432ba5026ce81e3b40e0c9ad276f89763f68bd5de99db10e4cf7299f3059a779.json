{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { User } from '../_models/user';\nexport let WelcomeComponent = class WelcomeComponent {\n  constructor(fg, auth, router, toastr) {\n    this.fg = fg;\n    this.auth = auth;\n    this.router = router;\n    this.toastr = toastr;\n    this.submitted = false;\n    this.loading = false;\n    this.isLoginError = false;\n    this.user = new User();\n  }\n  ngOnInit() {\n    this.LgForm = this.fg.group({\n      UserName: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.LgForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.LgForm.invalid) {\n      return;\n    } else {\n      this.loading = true;\n      // this.toastr.success('Successful');\n      this.auth.login(this.LgForm.value).subscribe(token => {\n        localStorage.setItem('authToken', token);\n        this.toastr.success('Successful');\n        console.log(this.LgForm.value);\n        this.router.navigate(['/list']);\n      }, err => {\n        alert(\"Wrong UserName or Password\");\n      });\n    }\n  }\n};\nWelcomeComponent = __decorate([Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})], WelcomeComponent);","map":{"version":3,"names":["Component","Validators","User","WelcomeComponent","constructor","fg","auth","router","toastr","submitted","loading","isLoginError","user","ngOnInit","LgForm","group","UserName","required","Password","f","controls","onSubmit","invalid","login","value","subscribe","token","localStorage","setItem","success","console","log","navigate","err","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\welcome\\welcome.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../_services/auth.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../_models/user';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent {\n\nLgForm!: FormGroup;\nsubmitted = false;\nloading = false;\nisLoginError : boolean = false;\nUserName: any;\nPassword: any;\nuser= new User();\n\nconstructor( private fg : FormBuilder, private auth : AuthService, private router: Router, private toastr: ToastrService){}\n \nngOnInit(): void{\n  this.LgForm = this.fg.group({\n   \n    UserName: ['', Validators.required],\n    Password: ['', Validators.required],\n    \n  });\n\n}\n\nget f() { return this.LgForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.LgForm.invalid) {\n      return;\n    }else{\n\n    this.loading = true;\n    // this.toastr.success('Successful');\n\n\n    this.auth.login(this.LgForm.value).subscribe((token : string) => {\n      localStorage.setItem('authToken', token);\n      this.toastr.success('Successful');\n      console.log(this.LgForm.value);\n      this.router.navigate(['/list']);\n      \n    },\n      err=>{\n        alert(\"Wrong UserName or Password\");\n      });\n\n    }\n\n  }\n\n\n\n \n\n \n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAInE,SAASC,IAAI,QAAQ,iBAAiB;AAQ/B,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAU7BC,YAAqBC,EAAgB,EAAUC,IAAkB,EAAUC,MAAc,EAAUC,MAAqB;IAAnG,KAAAH,EAAE,GAAFA,EAAE;IAAwB,KAAAC,IAAI,GAAJA,IAAI;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,MAAM,GAANA,MAAM;IAPzG,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,YAAY,GAAa,KAAK;IAG9B,KAAAC,IAAI,GAAE,IAAIV,IAAI,EAAE;EAE0G;EAE1HW,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACT,EAAE,CAACU,KAAK,CAAC;MAE1BC,QAAQ,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACgB,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACgB,QAAQ;KAEnC,CAAC;EAEJ;EAEA,IAAIE,CAACA,CAAA;IAAK,OAAO,IAAI,CAACL,MAAM,CAACM,QAAQ;EAAE;EAErCC,QAAQA,CAAA;IACN,IAAI,CAACZ,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACK,MAAM,CAACQ,OAAO,EAAE;MACvB;KACD,MAAI;MAEL,IAAI,CAACZ,OAAO,GAAG,IAAI;MACnB;MAGA,IAAI,CAACJ,IAAI,CAACiB,KAAK,CAAC,IAAI,CAACT,MAAM,CAACU,KAAK,CAAC,CAACC,SAAS,CAAEC,KAAc,IAAI;QAC9DC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;QACxC,IAAI,CAAClB,MAAM,CAACqB,OAAO,CAAC,YAAY,CAAC;QACjCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,MAAM,CAACU,KAAK,CAAC;QAC9B,IAAI,CAACjB,MAAM,CAACyB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAEjC,CAAC,EACCC,GAAG,IAAE;QACHC,KAAK,CAAC,4BAA4B,CAAC;MACrC,CAAC,CAAC;;EAIN;CAUD;AAzDY/B,gBAAgB,GAAAgC,UAAA,EAL5BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWnC,gBAAgB,CAyD5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}