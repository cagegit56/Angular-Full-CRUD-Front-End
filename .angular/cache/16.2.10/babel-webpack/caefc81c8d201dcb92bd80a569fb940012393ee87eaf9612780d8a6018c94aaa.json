{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let AuthService = class AuthService {\n  static isUserLoggedIn() {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7193/api/Authenticate/';\n    this.isloggedIn = false;\n  }\n  signUp(user) {\n    return this.http.post('https://localhost:7193/api/Authenticate/register', user, {\n      responseType: 'text'\n    });\n  }\n  login(user) {\n    this.isloggedIn = true;\n    return this.http.post('https://localhost:7193/api/Authenticate/login', user, {\n      responseType: 'text'\n    });\n  }\n  isUserLoggedIn() {\n    return this.isloggedIn;\n  }\n  loggedIn() {\n    return !!localStorage.getItem('userToken');\n  }\n};\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);","map":{"version":3,"names":["Injectable","AuthService","isUserLoggedIn","Error","constructor","http","baseUrl","isloggedIn","signUp","user","post","responseType","login","loggedIn","localStorage","getItem","__decorate","providedIn"],"sources":["C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\_services\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authenticated: any;\n  static isUserLoggedIn() {\n    throw new Error('Method not implemented.');\n  }\n\n  private baseUrl: String = 'https://localhost:7193/api/Authenticate/';\n  private isloggedIn: boolean;\n\n  constructor( private http: HttpClient, ) { \n    this.isloggedIn = false;\n  }\n\nsignUp(user: User){\n  return this.http.post(\n    'https://localhost:7193/api/Authenticate/register',user,\n    {responseType: 'text'}\n  );\n}\n\nlogin(user : User): Observable<string>{\n  this.isloggedIn = true;\n  return this.http.post(\n    'https://localhost:7193/api/Authenticate/login',user,\n    {responseType: 'text'}\n  );\n\n  \n\n  \n\n}\n\nisUserLoggedIn(): boolean {\n  return this.isloggedIn;\n}\n\n\n\n  loggedIn() {\n    return !!localStorage.getItem('userToken');\n  }\n\n\n\n}\n"],"mappings":";AACA,SAASA,UAAU,QAAQ,eAAe;AAOnC,WAAMC,WAAW,GAAjB,MAAMA,WAAW;EAEtB,OAAOC,cAAcA,CAAA;IACnB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAKAC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHjB,KAAAC,OAAO,GAAW,0CAA0C;IAIlE,IAAI,CAACC,UAAU,GAAG,KAAK;EACzB;EAEFC,MAAMA,CAACC,IAAU;IACf,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CACnB,kDAAkD,EAACD,IAAI,EACvD;MAACE,YAAY,EAAE;IAAM,CAAC,CACvB;EACH;EAEAC,KAAKA,CAACH,IAAW;IACf,IAAI,CAACF,UAAU,GAAG,IAAI;IACtB,OAAO,IAAI,CAACF,IAAI,CAACK,IAAI,CACnB,+CAA+C,EAACD,IAAI,EACpD;MAACE,YAAY,EAAE;IAAM,CAAC,CACvB;EAMH;EAEAT,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACK,UAAU;EACxB;EAIEM,QAAQA,CAAA;IACN,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC5C;CAID;AA7CYd,WAAW,GAAAe,UAAA,EAHvBhB,UAAU,CAAC;EACViB,UAAU,EAAE;CACb,CAAC,C,EACWhB,WAAW,CA6CvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}