{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { User } from '../_models/user';\nexport let ReguserComponent = class ReguserComponent {\n  constructor(fg, auth, router, toastr) {\n    this.fg = fg;\n    this.auth = auth;\n    this.router = router;\n    this.toastr = toastr;\n    this.submitted = false;\n    this.loading = false;\n    this.isLoginError = false;\n    this.user = new User();\n    this.emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n  }\n  ngOnInit() {\n    this.RegForm = this.fg.group({\n      UserName: ['', Validators.required],\n      Email: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.RegForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.RegForm.invalid) {\n      return;\n    } else {\n      this.loading = true;\n      this.auth.signUp(this.RegForm.value).subscribe(data => {\n        if (data.succeeded == true) this.toastr.success('Successfully Registered');\n        this.router.navigate(['/welcome']);\n      }, err => {\n        alert('UserName Already Exists');\n      });\n    }\n  }\n};\nReguserComponent = __decorate([Component({\n  selector: 'app-reguser',\n  templateUrl: './reguser.component.html',\n  styleUrls: ['./reguser.component.css']\n})], ReguserComponent);","map":{"version":3,"names":["Component","Validators","User","ReguserComponent","constructor","fg","auth","router","toastr","submitted","loading","isLoginError","user","emailPattern","ngOnInit","RegForm","group","UserName","required","Email","Password","f","controls","onSubmit","invalid","signUp","value","subscribe","data","succeeded","success","navigate","err","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\reguser\\reguser.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../_models/user';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-reguser',\n  templateUrl: './reguser.component.html',\n  styleUrls: ['./reguser.component.css']\n})\nexport class ReguserComponent {\n\nRegForm!: FormGroup;\nsubmitted = false;\nloading = false;\nisLoginError : boolean = false;\nUserName: any;\nPassword: any;\nEmail: any;\nuser= new User();\nemailPattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n\n  constructor(private fg : FormBuilder, private auth : AuthService, private router: Router ,private toastr: ToastrService){}\n\n\n  ngOnInit(): void{\n    this.RegForm = this.fg.group({\n     \n      UserName: ['', Validators.required],\n       Email: ['', Validators.required],\n      Password: ['', Validators.required],\n      \n    });\n  \n  }\n\n  get f() { return this.RegForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.RegForm.invalid) {\n      return;\n    }else{\n\n    this.loading = true;\n\n    this.auth.signUp(this.RegForm.value).subscribe((data: any)=> {\n      if(data.succeeded == true)\n      this.toastr.success('Successfully Registered');\n        this.router.navigate(['/welcome']);\n    \n    },err=>{\n      alert('UserName Already Exists');\n    })\n    \n    }\n\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAInE,SAASC,IAAI,QAAQ,iBAAiB;AAQ/B,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAY3BC,YAAoBC,EAAgB,EAAUC,IAAkB,EAAUC,MAAc,EAAUC,MAAqB;IAAnG,KAAAH,EAAE,GAAFA,EAAE;IAAwB,KAAAC,IAAI,GAAJA,IAAI;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,MAAM,GAANA,MAAM;IAT1G,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,YAAY,GAAa,KAAK;IAI9B,KAAAC,IAAI,GAAE,IAAIV,IAAI,EAAE;IAChB,KAAAW,YAAY,GAAC,0CAA0C;EAEoE;EAGzHC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,GAAG,IAAI,CAACV,EAAE,CAACW,KAAK,CAAC;MAE3BC,QAAQ,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACiB,QAAQ,CAAC;MAClCC,KAAK,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACiB,QAAQ,CAAC;MACjCE,QAAQ,EAAE,CAAC,EAAE,EAAEnB,UAAU,CAACiB,QAAQ;KAEnC,CAAC;EAEJ;EAEA,IAAIG,CAACA,CAAA;IAAK,OAAO,IAAI,CAACN,OAAO,CAACO,QAAQ;EAAE;EAExCC,QAAQA,CAAA;IACN,IAAI,CAACd,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACM,OAAO,CAACS,OAAO,EAAE;MACxB;KACD,MAAI;MAEL,IAAI,CAACd,OAAO,GAAG,IAAI;MAEnB,IAAI,CAACJ,IAAI,CAACmB,MAAM,CAAC,IAAI,CAACV,OAAO,CAACW,KAAK,CAAC,CAACC,SAAS,CAAEC,IAAS,IAAG;QAC1D,IAAGA,IAAI,CAACC,SAAS,IAAI,IAAI,EACzB,IAAI,CAACrB,MAAM,CAACsB,OAAO,CAAC,yBAAyB,CAAC;QAC5C,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MAEtC,CAAC,EAACC,GAAG,IAAE;QACLC,KAAK,CAAC,yBAAyB,CAAC;MAClC,CAAC,CAAC;;EAIJ;CAED;AAjDY9B,gBAAgB,GAAA+B,UAAA,EAL5BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWlC,gBAAgB,CAiD5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}