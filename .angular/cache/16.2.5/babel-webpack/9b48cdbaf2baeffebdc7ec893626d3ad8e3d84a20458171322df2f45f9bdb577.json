{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (localStorage.getItem('userToken') != null) return true;\n    this.router.navigate(['/welcome']);\n    return false;\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","router","canActivate","route","state","localStorage","getItem","navigate","_","i0","ɵɵinject","i1","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\Auth\\athsguard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router){}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean  {\r\n      if(localStorage.getItem('userToken') !=null)\r\n    return true;\r\n  this.router.navigate(['/welcome']);\r\n  return false;\r\n  }\r\n  \r\n}"],"mappings":";;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAU;EACpCC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,IAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAG,IAAI,EAC7C,OAAO,IAAI;IACb,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IAClC,OAAO,KAAK;EACZ;EAAC,QAAAC,CAAA,G;qBATUT,SAAS,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATd,SAAS;IAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}