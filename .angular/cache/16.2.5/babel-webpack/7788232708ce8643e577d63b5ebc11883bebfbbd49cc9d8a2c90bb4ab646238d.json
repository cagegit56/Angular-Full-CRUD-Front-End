{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { User } from '../_models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../_services/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class WelcomeComponent {\n  constructor(fg, auth, router) {\n    this.fg = fg;\n    this.auth = auth;\n    this.router = router;\n    this.submitted = false;\n    this.loading = false;\n    this.isLoginError = false;\n    this.user = new User();\n  }\n  ngOnInit() {\n    this.LgForm = this.fg.group({\n      UserName: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.LgForm.controls;\n  }\n  onLogin() {\n    this.submitted = true;\n    if (this.LgForm.invalid) {\n      return;\n    } else {\n      this.loading = true;\n      console.log(this.LgForm.value);\n      this.auth.login(this.LgForm.value).subscribe(data => {\n        if (data.succeeded == true) {\n          localStorage.setItem('authToken', data);\n          alert(\"Successfully Logged In\");\n          this.router.navigate(['/list']);\n        }\n      }, err => {\n        alert(\"Wrong UserName or Password\");\n      });\n    }\n  }\n  static #_ = this.ɵfac = function WelcomeComponent_Factory(t) {\n    return new (t || WelcomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WelcomeComponent,\n    selectors: [[\"app-welcome\"]],\n    decls: 34,\n    vars: 1,\n    consts: [[1, \"vh-100\", 2, \"background-color\", \"#9A616D\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col\", \"col-xl-10\"], [1, \"card\", 2, \"border-radius\", \"1rem\"], [1, \"row\", \"g-0\"], [1, \"col-md-6\", \"col-lg-7\", \"d-flex\", \"align-items-center\"], [1, \"card-body\", \"p-4\", \"p-lg-5\", \"text-black\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"d-flex\", \"align-items-center\", \"mb-3\", \"pb-1\"], [1, \"fas\", \"fa-cubes\", \"fa-2x\", \"me-3\", 2, \"color\", \"#ff6219\"], [1, \"h1\", \"fw-bold\", \"mb-0\"], [1, \"fw-normal\", \"mb-3\", \"pb-3\", 2, \"letter-spacing\", \"1px\"], [1, \"form-outline\", \"mb-4\"], [\"type\", \"username\", \"formControlName\", \"UserName\", 1, \"form-control\", \"form-control-lg\"], [1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"Password\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"form2Example27\", 1, \"form-label\"], [1, \"pt-1\", \"mb-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-dark\", \"btn-lg\", \"btn-block\"], [1, \"mb-5\", \"pb-lg-2\", 2, \"color\", \"#393f81\"], [\"routerLink\", \"/reguser\", 2, \"color\", \"#393f81\"], [\"href\", \"#!\", 1, \"small\", \"text-muted\"]],\n    template: function WelcomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function WelcomeComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(9, \"div\", 9);\n        i0.ɵɵelement(10, \"i\", 10);\n        i0.ɵɵelementStart(11, \"span\", 11);\n        i0.ɵɵtext(12, \"Logo\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"h5\", 12);\n        i0.ɵɵtext(14, \"Sign into your account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 13);\n        i0.ɵɵelement(16, \"input\", 14);\n        i0.ɵɵelementStart(17, \"label\", 15);\n        i0.ɵɵtext(18, \"Username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 13);\n        i0.ɵɵelement(20, \"input\", 16);\n        i0.ɵɵelementStart(21, \"label\", 17);\n        i0.ɵɵtext(22, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 18)(24, \"button\", 19);\n        i0.ɵɵtext(25, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"p\", 20);\n        i0.ɵɵtext(27, \"Don't have an account? \");\n        i0.ɵɵelementStart(28, \"a\", 21);\n        i0.ɵɵtext(29, \"Register here\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"a\", 22);\n        i0.ɵɵtext(31, \"Terms of use.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"a\", 22);\n        i0.ɵɵtext(33, \"Privacy policy\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.LgForm);\n      }\n    },\n    dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","User","WelcomeComponent","constructor","fg","auth","router","submitted","loading","isLoginError","user","ngOnInit","LgForm","group","UserName","required","Password","f","controls","onLogin","invalid","console","log","value","login","subscribe","data","succeeded","localStorage","setItem","alert","navigate","err","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","_2","selectors","decls","vars","consts","template","WelcomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","WelcomeComponent_Template_form_ngSubmit_8_listener","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\welcome\\welcome.component.ts","C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\welcome\\welcome.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../_services/auth.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../_models/user';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent {\n\nLgForm!: FormGroup;\nsubmitted = false;\nloading = false;\nisLoginError : boolean = false;\nUserName: any;\nPassword: any;\nuser= new User();\n\nconstructor( private fg : FormBuilder, private auth : AuthService, private router: Router){}\n \nngOnInit(): void{\n  this.LgForm = this.fg.group({\n   \n    UserName: ['', Validators.required],\n    Password: ['', Validators.required],\n    \n  });\n\n}\n\nget f() { return this.LgForm.controls; }\n\n  onLogin() {\n    this.submitted = true;\n    if (this.LgForm.invalid) {\n      return;\n    }else{\n\n    this.loading = true;\n    console.log(this.LgForm.value);\n\n\n    this.auth.login(this.LgForm.value).subscribe((data : any) => {\n      if( data.succeeded == true){\n        localStorage.setItem('authToken', data);\n      alert(\"Successfully Logged In\");\n      this.router.navigate(['/list']);}\n      \n    },\n      err=>{\n        alert(\"Wrong UserName or Password\");\n      });\n\n    }\n\n  }\n\n\n\n \n\n \n\n\n\n}\n","<section class=\"vh-100\" style=\"background-color: #9A616D;\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col col-xl-10\">\n          <div class=\"card\" style=\"border-radius: 1rem;\">\n            <div class=\"row g-0\">\n              <!-- <div class=\"col-md-6 col-lg-5 d-none d-md-block\">\n                <img src=\"https://mdbcdn.b-cdn.n/img/Phots/new-templats/bootstrap-login-fm/im1.wep\"\n                  alt=\"login form\" class=\"img-fluid\" style=\"border-radius: 1rem 0 0 1rem;\" />\n              </div> -->\n              <div class=\"col-md-6 col-lg-7 d-flex align-items-center\">\n                <div class=\"card-body p-4 p-lg-5 text-black\">\n  \n                  <form [formGroup]=\"LgForm\"  (ngSubmit)=\"onLogin()\" >\n  \n                    <div class=\"d-flex align-items-center mb-3 pb-1\">\n                      <i class=\"fas fa-cubes fa-2x me-3\" style=\"color: #ff6219;\"></i>\n                      <span class=\"h1 fw-bold mb-0\">Logo</span>\n                    </div>\n  \n                    <h5 class=\"fw-normal mb-3 pb-3\" style=\"letter-spacing: 1px;\">Sign into your account</h5>\n  \n                    <div class=\"form-outline mb-4\">\n                      <input type=\"username\"  formControlName= \"UserName\" class=\"form-control form-control-lg\"\n                       />\n                       <!-- [ngClass]=\"{ 'is-invalid': submitted && f['UserName'].errors }\" -->\n                      <!-- <div *ngIf=\"submitted && f['UserName'].errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f['UserName'].errors\">UserName is required</div>\n                    </div> -->\n                      <label class=\"form-label\" >Username</label>\n                      \n                    </div>\n  \n                    <div class=\"form-outline mb-4\">\n                      <input type=\"password\" formControlName= \"Password\"  class=\"form-control form-control-lg\"\n                        />\n                        <!-- [ngClass]=\"{ 'is-invalid': submitted && f['Password'].errors }\" \n                      <div *ngIf=\"submitted && f['Password'].errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f['Password'].errors\">Password is required</div>\n                    </div> -->\n                      <label class=\"form-label\" for=\"form2Example27\">Password</label>\n                    </div>\n  \n                    <div class=\"pt-1 mb-4\">\n                      <!-- [disabled]=\"loading\" -->\n                      <button type=\"button\"   class=\"btn btn-dark btn-lg btn-block\" >Login</button>\n                    </div>\n  \n                    \n                    <p class=\"mb-5 pb-lg-2\" style=\"color: #393f81;\">Don't have an account? <a routerLink=\"/reguser\"\n                        style=\"color: #393f81;\">Register here</a></p>\n                    <a href=\"#!\" class=\"small text-muted\">Terms of use.</a>\n                    <a href=\"#!\" class=\"small text-muted\">Privacy policy</a>\n                  </form>\n  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}