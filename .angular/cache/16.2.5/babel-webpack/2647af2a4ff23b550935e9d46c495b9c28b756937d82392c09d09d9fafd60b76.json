{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../_services/auth.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class WelcomeComponent {\n  constructor(fg, auth) {\n    this.fg = fg;\n    this.auth = auth;\n  }\n  ngOnInit() {\n    this.loginForm = this.fg.group({\n      UserName: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n      this.auth.login(this.loginForm.value).subscribe({\n        next: res => {\n          alert(res.message);\n        },\n        error: err => {\n          alert(err?.error.message);\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function WelcomeComponent_Factory(t) {\n    return new (t || WelcomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WelcomeComponent,\n    selectors: [[\"app-welcome\"]],\n    decls: 8,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"form-group\", \"mb-3\"], [1, \"mb-2\"], [\"type\", \"text\", \"formControlName\", \"UserName\", 1, \"form-control\", 3, \"ngClass\"]],\n    template: function WelcomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function WelcomeComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"UserName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7, \"halo\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx.submitted && ctx.f[\"UserName\"].errors));\n      }\n    },\n    dependencies: [i3.NgClass, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","WelcomeComponent","constructor","fg","auth","ngOnInit","loginForm","group","UserName","required","Password","onLogin","valid","console","log","value","login","subscribe","next","res","alert","message","error","err","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","_2","selectors","decls","vars","consts","template","WelcomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","WelcomeComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","ɵɵpureFunction1","_c0","submitted","f","errors"],"sources":["C:\\Users\\User\\Desktop\\Angular app\\cageapp\\src\\app\\welcome\\welcome.component.ts","C:\\Users\\User\\Desktop\\Angular app\\cageapp\\src\\app\\welcome\\welcome.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent {\n\nloginForm!: FormGroup;\n\nconstructor( private fg : FormBuilder, private auth : AuthService){}\n \nngOnInit(): void{\n  this.loginForm = this.fg.group({\n   UserName : ['', Validators.required],\n   Password : ['', Validators.required],\n  })\n}\n\n\n  onLogin() {\n\n    if(this.loginForm.valid){\n      console.log(this.loginForm.value)\n\n      this.auth.login(this.loginForm.value)\n      .subscribe({\n        next:(res) =>{\n          alert(res.message)\n        },\n        error:(err) => {\n          alert(err?.error.message)\n        }\n      })\n\n    }\n\n  }\n\n\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n\n    <div class=\"row\">\n        <div class=\"form-group mb-3\">\n            <label class=\"mb-2\">UserName</label>\n            <input type=\"text\" formControlName=\"UserName\" class=\"form-control\"\n           [ngClass]=\"{ 'is-invalid': submitted && f['UserName'].errors }\" />\n            \n        </div>\n\n    </div>\n     \n\n    <p>halo</p>\n</form>\n\n<!-- <section>\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-md-4\">\n            <div class=\"card shadow\">\n                <div class=\"card-header border-bottom\">\n                    <h4>{{title}}</h4>\n                </div>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n                        <div class=\"row\">\n                            <div class=\"form-group mb-3\">\n                                <label class=\"mb-2\">UserName</label>\n                                <input type=\"text\" formControlName=\"UserName\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f['UserName'].errors }\" />\n                                <div *ngIf=\"submitted && f['UserName'].errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f['UserName'].errors\">UserName is required</div>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group mb-3\">\n                                <label class=\"mb-2\">Password</label>\n                                <input type=\"text\" formControlName=\"Password\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f['Password'].errors }\" />\n                                <div *ngIf=\"submitted && f['Password'].errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f['Password'].errors\">Password is required</div>\n                                </div>\n                            </div>\n                       \n                         \n\n                        <button type=\"submit\" class=\"btn btn-success me-3\">Submit</button> -->\n                        <!-- <button type=\"submit\" class=\"btn btn-outline-danger\" (click)=\"btnCancel()\">Submit</button> -->\n                    <!-- </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</section> -->"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;;AAQnE,OAAM,MAAOC,gBAAgB;EAI7BC,YAAqBC,EAAgB,EAAUC,IAAkB;IAA5C,KAAAD,EAAE,GAAFA,EAAE;IAAwB,KAAAC,IAAI,GAAJA,IAAI;EAAgB;EAEnEC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC9BC,QAAQ,EAAG,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACpCC,QAAQ,EAAG,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAGEE,OAAOA,CAAA;IAEL,IAAG,IAAI,CAACL,SAAS,CAACM,KAAK,EAAC;MACtBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,SAAS,CAACS,KAAK,CAAC;MAEjC,IAAI,CAACX,IAAI,CAACY,KAAK,CAAC,IAAI,CAACV,SAAS,CAACS,KAAK,CAAC,CACpCE,SAAS,CAAC;QACTC,IAAI,EAAEC,GAAG,IAAI;UACXC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;QACpB,CAAC;QACDC,KAAK,EAAEC,GAAG,IAAI;UACZH,KAAK,CAACG,GAAG,EAAED,KAAK,CAACD,OAAO,CAAC;QAC3B;OACD,CAAC;;EAIN;EAAC,QAAAG,CAAA,G;qBA/BUvB,gBAAgB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhB9B,gBAAgB;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT7Bb,EAAA,CAAAe,cAAA,cAAqD;QAAvBf,EAAA,CAAAgB,UAAA,sBAAAC,mDAAA;UAAA,OAAYH,GAAA,CAAA5B,OAAA,EAAS;QAAA,EAAC;QAEhDc,EAAA,CAAAe,cAAA,aAAiB;QAEWf,EAAA,CAAAkB,MAAA,eAAQ;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACpCnB,EAAA,CAAAoB,SAAA,eACiE;QAErEpB,EAAA,CAAAmB,YAAA,EAAM;QAKVnB,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAkB,MAAA,WAAI;QAAAlB,EAAA,CAAAmB,YAAA,EAAI;;;QAbTnB,EAAA,CAAAqB,UAAA,cAAAP,GAAA,CAAAjC,SAAA,CAAuB;QAMlBmB,EAAA,CAAAsB,SAAA,GAA+D;QAA/DtB,EAAA,CAAAqB,UAAA,YAAArB,EAAA,CAAAuB,eAAA,IAAAC,GAAA,EAAAV,GAAA,CAAAW,SAAA,IAAAX,GAAA,CAAAY,CAAA,aAAAC,MAAA,EAA+D"},"metadata":{},"sourceType":"module","externalDependencies":[]}