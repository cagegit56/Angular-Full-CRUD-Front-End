{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { User } from '../_models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../_services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction WelcomeComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2, \"UserName is required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction WelcomeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, WelcomeComponent_div_6_div_1_Template, 3, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"UserName\"].errors[\"UserName\"]);\n  }\n}\nfunction WelcomeComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WelcomeComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, WelcomeComponent_div_11_div_1_Template, 2, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"Password\"].errors[\"Password\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class WelcomeComponent {\n  constructor(fg, auth, router) {\n    this.fg = fg;\n    this.auth = auth;\n    this.router = router;\n    this.submitted = false;\n    this.loading = false;\n    this.isLoginError = false;\n    this.user = new User();\n  }\n  ngOnInit() {\n    this.LgForm = this.fg.group({\n      UserName: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.LgForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.LgForm.invalid) {\n      return;\n    } else {\n      this.loading = true;\n      this.auth.login(this.LgForm.value).subscribe(data => {\n        if (data.succeeded == true) {\n          localStorage.setItem('authToken', data);\n          alert(\"Successfully Logged In\");\n          console.log(this.LgForm.value);\n          this.router.navigate(['/list']);\n        }\n      }, err => {\n        alert(\"Wrong UserName or Password\");\n      });\n    }\n  }\n  static #_ = this.ɵfac = function WelcomeComponent_Factory(t) {\n    return new (t || WelcomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WelcomeComponent,\n    selectors: [[\"app-welcome\"]],\n    decls: 15,\n    vars: 9,\n    consts: [[1, \"register-form\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"UserName\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"Password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function WelcomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function WelcomeComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\");\n        i0.ɵɵtext(4, \"UserName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵtemplate(6, WelcomeComponent_div_6_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\");\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵtemplate(11, WelcomeComponent_div_11_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"button\", 6);\n        i0.ɵɵtext(14, \"Register\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.LgForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f[\"UserName\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"UserName\"].errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f[\"Password\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"Password\"].errors);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","User","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","WelcomeComponent_div_6_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","f","errors","WelcomeComponent_div_11_div_1_Template","ctx_r1","WelcomeComponent","constructor","fg","auth","router","submitted","loading","isLoginError","user","ngOnInit","LgForm","group","UserName","required","Password","controls","onSubmit","invalid","login","value","subscribe","data","succeeded","localStorage","setItem","alert","console","log","navigate","err","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","_2","selectors","decls","vars","consts","template","WelcomeComponent_Template","rf","ctx","ɵɵlistener","WelcomeComponent_Template_form_ngSubmit_1_listener","ɵɵelement","WelcomeComponent_div_6_Template","WelcomeComponent_div_11_Template","ɵɵpureFunction1","_c0"],"sources":["C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\welcome\\welcome.component.ts","C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\welcome\\welcome.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../_services/auth.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../_models/user';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent {\n\nLgForm!: FormGroup;\nsubmitted = false;\nloading = false;\nisLoginError : boolean = false;\nUserName: any;\nPassword: any;\nuser= new User();\n\nconstructor( private fg : FormBuilder, private auth : AuthService, private router: Router){}\n \nngOnInit(): void{\n  this.LgForm = this.fg.group({\n   \n    UserName: ['', Validators.required],\n    Password: ['', Validators.required],\n    \n  });\n\n}\n\nget f() { return this.LgForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.LgForm.invalid) {\n      return;\n    }else{\n\n    this.loading = true;\n    \n\n\n    this.auth.login(this.LgForm.value).subscribe((data : any) => {\n      if( data.succeeded == true){\n        localStorage.setItem('authToken', data);\n      alert(\"Successfully Logged In\");\n      console.log(this.LgForm.value);\n      this.router.navigate(['/list']);}\n      \n    },\n      err=>{\n        alert(\"Wrong UserName or Password\");\n      });\n\n    }\n\n  }\n\n\n\n \n\n \n\n\n\n}\n","<div class=\"register-form\">\n  <form [formGroup]=\"LgForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label>UserName</label>\n      <input\n        type=\"text\"\n        formControlName=\"UserName\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f['UserName'].errors }\"\n      />\n      <div *ngIf=\"submitted && f['UserName'].errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f['UserName'].errors['UserName']\"><label>UserName is required</label></div>\n      </div>\n    </div>\n\n    \n\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input\n        type=\"password\"\n        formControlName=\"Password\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f['Password'].errors }\"\n      />\n      <div *ngIf=\"submitted && f['Password'].errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f['Password'].errors['Password']\">Password is required</div>\n      \n       \n      </div>\n    </div>\n\n    \n\n   \n\n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n      \n    </div>\n  </form>\n</div>\n\n<!-- <section class=\"vh-100\" style=\"background-color: #9A616D;\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col col-xl-10\">\n          <div class=\"card\" style=\"border-radius: 1rem;\">\n            <div class=\"row g-0\"> -->\n              <!-- <div class=\"col-md-6 col-lg-5 d-none d-md-block\">\n                <img src=\"https://mdbcdn.b-cdn.n/img/Phots/new-templats/bootstrap-login-fm/im1.wep\"\n                  alt=\"login form\" class=\"img-fluid\" style=\"border-radius: 1rem 0 0 1rem;\" />\n              </div> -->\n              <!-- <div class=\"col-md-6 col-lg-7 d-flex align-items-center\">\n                <div class=\"card-body p-4 p-lg-5 text-black\">\n  \n                  <form [formGroup]=\"LgForm\"  (ngSubmit)=\"onLogin()\" >\n  \n                    <div class=\"d-flex align-items-center mb-3 pb-1\">\n                      <i class=\"fas fa-cubes fa-2x me-3\" style=\"color: #ff6219;\"></i>\n                      <span class=\"h1 fw-bold mb-0\">Logo</span>\n                    </div> -->\n  \n                    <!-- <h5 class=\"fw-normal mb-3 pb-3\" style=\"letter-spacing: 1px;\">Sign into your account</h5>\n\n                    <div class=\"col-5 mb-3\">\n                      <label class=\"form-label\">UserName</label>\n                      <input type=\"text\" formControlName=\"UserName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f['UserName'].errors }\" />\n                      <div *ngIf=\"submitted && f['UserName'].errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f['UserName'].errors['required']\">UserName is required</div>\n                      </div>\n                  </div>\n                  <div class=\"col-5 mb-3\">\n                      <label class=\"form-label\">Password</label>\n                      <input type=\"password\" formControlName=\"Password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f['Password'].errors }\" />\n                      <div *ngIf=\"submitted && f['Password'].errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f['Password'].errors['required']\">Password is required</div>\n                      </div>\n                  </div> -->\n              \n  \n                    <!-- <div class=\"form-outline mb-4\">\n                      <input type=\"username\"  formControlName=\"UserName\" class=\"form-control form-control-lg\" /> -->\n                       <!-- [ngClass]=\"{ 'is-invalid': submitted && f['UserName'].errors }\" -->\n                      <!-- <div *ngIf=\"submitted && f['UserName'].errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f['UserName'].errors\">UserName is required</div>\n                    </div> -->\n                      <!-- <label class=\"form-label\" >Username</label>\n                      \n                    </div> -->\n  \n                    <!-- <div class=\"form-outline mb-4\">\n                      <input type=\"password\" formControlName=\"Password\"  class=\"form-control form-control-lg\" /> -->\n                        <!-- [ngClass]=\"{ 'is-invalid': submitted && f['Password'].errors }\" \n                      <div *ngIf=\"submitted && f['Password'].errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f['Password'].errors\">Password is required</div>\n                    </div> -->\n                      <!-- <label class=\"form-label\" for=\"form2Example27\">Password</label>\n                    </div> -->\n  \n                    <!-- <div class=\"pt-1 mb-4\"> -->\n                      <!-- [disabled]=\"loading\" -->\n                      <!-- <button type=\"button\"   class=\"btn btn-dark btn-lg btn-block\" >Login</button>\n                    </div> -->\n  \n                    \n                    <!-- <p class=\"mb-5 pb-lg-2\" style=\"color: #393f81;\">Don't have an account? <a routerLink=\"/reguser\"\n                        style=\"color: #393f81;\">Register here</a></p>\n                    <a href=\"#!\" class=\"small text-muted\">Terms of use.</a>\n                    <a href=\"#!\" class=\"small text-muted\">Privacy policy</a>\n                  </form>\n  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section> -->\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}