{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { User } from '../_models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../_services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction WelcomeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"UserName is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WelcomeComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WelcomeComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, WelcomeComponent_div_11_div_1_Template, 2, 0, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"Password\"].errors == null ? null : ctx_r1.f[\"Password\"].errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class WelcomeComponent {\n  constructor(fg, auth, router) {\n    this.fg = fg;\n    this.auth = auth;\n    this.router = router;\n    this.submitted = false;\n    this.loading = false;\n    this.isLoginError = false;\n    this.user = new User();\n  }\n  ngOnInit() {\n    this.LgForm = this.fg.group({\n      UserName: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.LgForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.LgForm.invalid) {\n      return;\n    } else {\n      this.loading = true;\n      this.auth.login(this.LgForm.value).subscribe(token => {\n        localStorage.setItem('authToken', token);\n        alert(\"Successfully Logged In\");\n        console.log(this.LgForm.value);\n        this.router.navigate(['/list']);\n      }, err => {\n        alert(\"Wrong UserName or Password\");\n      });\n    }\n  }\n  static #_ = this.ɵfac = function WelcomeComponent_Factory(t) {\n    return new (t || WelcomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WelcomeComponent,\n    selectors: [[\"app-welcome\"]],\n    decls: 18,\n    vars: 9,\n    consts: [[1, \"Login-form\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"UserName\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"Password\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/reguser\"], [1, \"invalid-feedback\"]],\n    template: function WelcomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function WelcomeComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\");\n        i0.ɵɵtext(4, \"UserName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵtemplate(6, WelcomeComponent_div_6_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\");\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵtemplate(11, WelcomeComponent_div_11_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"button\", 7);\n        i0.ɵɵtext(14, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"a\", 8);\n        i0.ɵɵtext(17, \"Register Here \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.LgForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f[\"UserName\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"UserName\"].errors == null ? null : ctx.f[\"UserName\"].errors[\"required\"]);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f[\"Password\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"Password\"].errors);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","User","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","WelcomeComponent_div_11_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r1","f","errors","WelcomeComponent","constructor","fg","auth","router","submitted","loading","isLoginError","user","ngOnInit","LgForm","group","UserName","required","Password","controls","onSubmit","invalid","login","value","subscribe","token","localStorage","setItem","alert","console","log","navigate","err","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","_2","selectors","decls","vars","consts","template","WelcomeComponent_Template","rf","ctx","ɵɵlistener","WelcomeComponent_Template_form_ngSubmit_1_listener","ɵɵelement","WelcomeComponent_div_6_Template","WelcomeComponent_div_11_Template","ɵɵpureFunction1","_c0"],"sources":["C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\welcome\\welcome.component.ts","C:\\Users\\kagiso\\Desktop\\Projects\\Angular app2\\Angular app\\cageapp\\src\\app\\welcome\\welcome.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../_services/auth.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../_models/user';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent {\n\nLgForm!: FormGroup;\nsubmitted = false;\nloading = false;\nisLoginError : boolean = false;\nUserName: any;\nPassword: any;\nuser= new User();\n\nconstructor( private fg : FormBuilder, private auth : AuthService, private router: Router){}\n \nngOnInit(): void{\n  this.LgForm = this.fg.group({\n   \n    UserName: ['', Validators.required],\n    Password: ['', Validators.required],\n    \n  });\n\n}\n\nget f() { return this.LgForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.LgForm.invalid) {\n      return;\n    }else{\n\n    this.loading = true;\n    \n\n\n    this.auth.login(this.LgForm.value).subscribe((token : string) => {\n      localStorage.setItem('authToken', token);\n      alert(\"Successfully Logged In\");\n      console.log(this.LgForm.value);\n      this.router.navigate(['/list']);\n      \n    },\n      err=>{\n        alert(\"Wrong UserName or Password\");\n      });\n\n    }\n\n  }\n\n\n\n \n\n \n\n\n\n}\n","<div class=\"Login-form\">\n  <form [formGroup]=\"LgForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label>UserName</label>\n      <input\n        type=\"text\"\n        formControlName=\"UserName\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f['UserName'].errors }\"\n       required/>\n      <div *ngIf=\"f['UserName'].errors?.['required']\">UserName is required</div>\n      \n    </div>\n\n    \n\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input\n        type=\"password\"\n        formControlName=\"Password\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f['Password'].errors }\"\n      />\n      <div *ngIf=\"submitted && f['Password'].errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f['Password'].errors?.['required']\">Password is required</div>\n      </div>\n    </div>\n\n    \n\n   \n\n    <div class=\"form-group\">\n      <button type=\"submit\"  class=\"btn btn-primary\">Login</button>\n      <br>\n      <a routerLink=\"/reguser\">Register Here </a>\n      \n    </div>\n  </form>\n</div>\n\n\n\n<!-- [disabled]=\"!LgForm.valid\" -->\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}