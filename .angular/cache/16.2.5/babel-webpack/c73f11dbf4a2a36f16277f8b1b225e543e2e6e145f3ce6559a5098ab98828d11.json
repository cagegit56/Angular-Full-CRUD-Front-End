{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7193';\n  }\n  signUp(userObj) {\n    return this.http.post(`${this.baseUrl}register`, userObj);\n  }\n  login(UserName, Password) {\n    var data = \"username=\" + UserName + \"&password=\" + Password + \"&grant_type=password\";\n    var reqHeader = new HttpHeaders({\n      'Content-Type': 'application/x-www-urlencoded'\n    });\n    return this.http.post(`${this.baseUrl}Authenticate`, data, {\n      headers: reqHeader\n    });\n    // return this.http.post<any>(`${this.baseUrl}authenticate` npm install ngx-toastr –save ,loginObj);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","AuthService","constructor","http","baseUrl","signUp","userObj","post","login","UserName","Password","data","reqHeader","headers","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\Desktop\\Angular app2\\Angular app\\cageApp\\src\\app\\_services\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private baseUrl: String = 'https://localhost:7193';\n\n  constructor( private http: HttpClient) { }\n\nsignUp(userObj: any){\n  return this.http.post<any>(`${this.baseUrl}register` ,userObj);\n}\n\nlogin(UserName : any, Password : any ){\n  var data = \"username=\"+UserName+\"&password=\"+Password+\"&grant_type=password\";\n    var reqHeader = new HttpHeaders({'Content-Type':'application/x-www-urlencoded'});\n    return this.http.post<any>(`${this.baseUrl}Authenticate`, data, {headers: reqHeader});\n  // return this.http.post<any>(`${this.baseUrl}authenticate` npm install ngx-toastr –save ,loginObj);\n}\n\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,WAAW;EAItBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFjB,KAAAC,OAAO,GAAW,wBAAwB;EAET;EAE3CC,MAAMA,CAACC,OAAY;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,UAAU,EAAEE,OAAO,CAAC;EAChE;EAEAE,KAAKA,CAACC,QAAc,EAAEC,QAAc;IAClC,IAAIC,IAAI,GAAG,WAAW,GAACF,QAAQ,GAAC,YAAY,GAACC,QAAQ,GAAC,sBAAsB;IAC1E,IAAIE,SAAS,GAAG,IAAIZ,WAAW,CAAC;MAAC,cAAc,EAAC;IAA8B,CAAC,CAAC;IAChF,OAAO,IAAI,CAACG,IAAI,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,cAAc,EAAEO,IAAI,EAAE;MAACE,OAAO,EAAED;IAAS,CAAC,CAAC;IACvF;EACF;EAAC,QAAAE,CAAA,G;qBAfYb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}